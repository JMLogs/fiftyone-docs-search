Metadata-Version: 2.1
Name: fiftyone-docs-search
Version: 0.20.1
Summary: Semantic search for the FiftyOne Docs from command line
Home-page: https://github.com/voxel51/fiftyone-docs-search
Author: Voxel51, Inc.
Author-email: info@voxel51.com
License: Apache
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Scientific/Engineering :: Image Processing
Classifier: Topic :: Scientific/Engineering :: Image Recognition
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Scientific/Engineering :: Visualization
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: Microsoft :: Windows
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE

# fiftyone-docs-search
Search https://docs.voxel51.com with an LLM!

## Overview

This repo contains the code to enable semantic search on the 
[Voxel51 documentation](https://docs.voxel51.com) from Python or the command 
line. The search is powered by [FiftyOne](https://github.com/voxel51/fiftyone), 
OpenAI's [text-embedding-ada-002 model](https://platform.openai.com/docs/guides/embeddings), and [Qdrant vector search](https://qdrant.tech/).

## Installation

1. Clone the `fiftyone-docs-search` repo 

```
git clone https://github.com/voxel51/fiftyone-docs-search
```

2. Install [OpenAI's Python client](https://github.com/openai/openai-python) 

```
pip install openai
```

 and [register an API key](https://platform.openai.com/account/api-keys). Once you have your API key, set the `OPENAI_API_KEY` environment variable to it:

```
export OPENAI_API_KEY=<your key>
```

3. Install the [Qdrant Python client](https://github.com/qdrant/qdrant-client): 

```
pip install qdrant_client
```

and set up a Docker container with Qdrant running locally:

```
docker pull qdrant/qdrant
docker run -p 6333:6333 qdrant/qdrant
```

4. Install the `fiftyone-docs-search` package by `cd`ing into the repo and running:

```
pip install -e .
```

## Usage

### Command line

The `fiftyone-docs-search` package provides a command line interface for
searching the Voxel51 documentation. To use it, run:

```
fiftyone-docs-search query <query>
```

where `<query>` is the search query. For example:

```
fiftyone-docs-search query "how to load a dataset"
```

INSERT GIF HERE

The following flags can con give you control over search behavior:
- `--num_results`: the number of results returned
- `--open_url`: whether to open the top result in your browser
- `--score`: whether to return the score of each result
- `--doc_types`: the types of docs to search over (e.g., "tutorials", "api", "guides")
- `--block_types`: the types of blocks to search over (e.g., "code", "text")

You can also use the `--help` flag to see all available options:

```
fiftyone-docs-search --help
```

### Python

The `fiftyone-docs-search` package also provides a Python API for searching the
Voxel51 documentation. To use it, run:

```py
from fiftyone_docs_search import FiftyOneDocsSearch

fods = FiftyOneDocsSearch()
results = fods.search("how to load a dataset")
```

